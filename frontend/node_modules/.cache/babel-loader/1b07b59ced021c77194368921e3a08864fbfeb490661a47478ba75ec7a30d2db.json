{"ast":null,"code":"var _jsxFileName = \"/home/tarun/Documents/greenkoproject/frontend/src/Components/Newmod/Newmod.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Newmod.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Newmod = ({\n  show,\n  onClose,\n  onApprove,\n  onReject,\n  userRole\n}) => {\n  _s();\n  const [comments, setComments] = useState('');\n  const submitComments = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/comments', {\n        comments\n      });\n      console.log('Comments submitted successfully:', response.data);\n      console.log(userRole);\n    } catch (error) {\n      console.error('Error submitting comments:', error);\n    }\n  };\n  const handleApprove = () => {\n    submitComments();\n    onApprove(comments);\n    setComments('');\n  };\n  const handleReject = () => {\n    submitComments();\n    onReject(comments);\n    setComments('');\n  };\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [userRole === 'employee' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"approve\",\n          onClick: handleApprove,\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reject\",\n          onClick: handleReject,\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Newmod, \"3WsHwHTZDASED6+Hjhi4AAMgALI=\");\n_c = Newmod;\nexport default Newmod;\nvar _c;\n$RefreshReg$(_c, \"Newmod\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Newmod","show","onClose","onApprove","onReject","userRole","_s","comments","setComments","submitComments","response","post","console","log","data","error","handleApprove","handleReject","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tarun/Documents/greenkoproject/frontend/src/Components/Newmod/Newmod.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Newmod.css';\n\nconst Newmod = ({ show, onClose, onApprove, onReject, userRole }) => {\n  const [comments, setComments] = useState('');\n\n  const submitComments = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/comments', { comments });\n      console.log('Comments submitted successfully:', response.data);\n      console.log(userRole)\n    } catch (error) {\n      console.error('Error submitting comments:', error);\n    }\n  };\n\n  const handleApprove = () => {\n    submitComments();\n    onApprove(comments);\n    setComments('');\n  };\n\n  const handleReject = () => {\n    submitComments();\n    onReject(comments);\n    setComments('');\n  };\n\n  if (!show) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        {(userRole === 'employee') && (\n          <div className=\"modal-actions\">\n            <button className=\"approve\" onClick={handleApprove}>Approve</button>\n            <button className=\"reject\" onClick={handleReject}>Reject</button>\n          </div>\n        )}\n        <button className=\"close\" onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Newmod;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,SAAS;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAE;QAAEJ;MAAS,CAAC,CAAC;MACrFK,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC9DF,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BP,cAAc,CAAC,CAAC;IAChBN,SAAS,CAACI,QAAQ,CAAC;IACnBC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBR,cAAc,CAAC,CAAC;IAChBL,QAAQ,CAACG,QAAQ,CAAC;IAClBC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,IAAI,CAACP,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACEF,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BpB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC1Bd,QAAQ,KAAK,UAAU,iBACvBN,OAAA;QAAKmB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BpB,OAAA;UAAQmB,SAAS,EAAC,SAAS;UAACE,OAAO,EAAEJ,aAAc;UAAAG,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpEzB,OAAA;UAAQmB,SAAS,EAAC,QAAQ;UAACE,OAAO,EAAEH,YAAa;UAAAE,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CACN,eACDzB,OAAA;QAAQmB,SAAS,EAAC,OAAO;QAACE,OAAO,EAAElB,OAAQ;QAAAiB,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxCIN,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}