{"ast":null,"code":"var _jsxFileName = \"/home/tarun/Documents/greenkoproject/frontend/src/Components/Newmod/Newmod.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Newmod.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Newmod = ({\n  show,\n  onClose,\n  onSubmit,\n  policyId\n}) => {\n  _s();\n  const [comments, setComments] = useState('');\n  const userRole = localStorage.getItem('userRole');\n  console.log(userRole);\n  const submitComments = async () => {\n    try {\n      const response = await axios.post(`http://localhost:5000/policies/${policyId}/comments`, {\n        policyId,\n        comments\n      });\n      console.log('Comments submitted successfully:', response.data);\n    } catch (error) {\n      console.error('Error submitting comments:', error);\n    }\n  };\n  const handleApprove = () => {\n    if (userRole === 'manager' || userRole === 'head') {\n      submitComments();\n    }\n    onSubmit(comments);\n    setComments('');\n  };\n  const handleReject = () => {\n    if (userRole === 'manager' || userRole === 'head') {\n      submitComments();\n    }\n    onSubmit(comments);\n    setComments('');\n  };\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [(userRole === 'manager' || userRole === 'head') && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"comments\",\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"comments\",\n            value: comments,\n            onChange: e => setComments(e.target.value),\n            rows: \"4\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"approve\",\n          onClick: handleApprove,\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), (userRole === 'manager' || userRole === 'head') && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reject\",\n          onClick: handleReject,\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Newmod, \"3WsHwHTZDASED6+Hjhi4AAMgALI=\");\n_c = Newmod;\nexport default Newmod;\nvar _c;\n$RefreshReg$(_c, \"Newmod\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Newmod","show","onClose","onSubmit","policyId","_s","comments","setComments","userRole","localStorage","getItem","console","log","submitComments","response","post","data","error","handleApprove","handleReject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","rows","required","onClick","_c","$RefreshReg$"],"sources":["/home/tarun/Documents/greenkoproject/frontend/src/Components/Newmod/Newmod.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Newmod.css';\n\nconst Newmod = ({ show, onClose, onSubmit, policyId }) => {\n  const [comments, setComments] = useState('');\n  const userRole = localStorage.getItem('userRole'); \n  console.log(userRole);\n\n  const submitComments = async () => {\n    try {\n      const response = await axios.post(`http://localhost:5000/policies/${policyId}/comments`, { policyId, comments });\n      console.log('Comments submitted successfully:', response.data);\n    } catch (error) {\n      console.error('Error submitting comments:', error);\n    }\n  };\n\n  const handleApprove = () => {\n    if (userRole === 'manager' || userRole === 'head') {\n      submitComments();\n    }\n    onSubmit(comments);\n    setComments('');\n  };\n\n  const handleReject = () => {\n    if (userRole === 'manager' || userRole === 'head') {\n      submitComments();\n    }\n    onSubmit(comments);\n    setComments('');\n  };\n\n  if (!show) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        {(userRole === 'manager' || userRole === 'head') && (\n          <>\n            <h2>Comments</h2>\n            <div className=\"comments-section\">\n              <label htmlFor=\"comments\">Comments:</label>\n              <textarea\n                id=\"comments\"\n                value={comments}\n                onChange={(e) => setComments(e.target.value)}\n                rows=\"4\"\n                required\n              ></textarea>\n            </div>\n          </>\n        )}\n        <div className=\"modal-actions\">\n          <button className=\"approve\" onClick={handleApprove}>Approve</button>\n          {(userRole === 'manager' || userRole === 'head') && (\n            <button className=\"reject\" onClick={handleReject}>Reject</button>\n          )}\n          <button className=\"close\" onClick={onClose}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Newmod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}