{"ast":null,"code":"var _jsxFileName = \"/home/tarun/Documents/greenkoproject/frontend/src/Components/PoliciesContext/PoliciesContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PoliciesContext = /*#__PURE__*/createContext();\nexport const PoliciesProvider = ({\n  children\n}) => {\n  _s();\n  const [policies, setPolicies] = useState([]);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchPolicies = async () => {\n      try {\n        const response = await axios.get('http://localhost:4001/api/policies');\n        setPolicies(response.data);\n      } catch (error) {\n        console.error('Error fetching policies:', error);\n      }\n    };\n    fetchPolicies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PoliciesContext.Provider, {\n    value: {\n      policies,\n      setPolicies,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(PoliciesProvider, \"N0as0kYpazjg/IDJWpkYsoBrAJ8=\");\n_c = PoliciesProvider;\nvar _c;\n$RefreshReg$(_c, \"PoliciesProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","PoliciesContext","PoliciesProvider","children","_s","policies","setPolicies","user","setUser","fetchPolicies","response","get","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tarun/Documents/greenkoproject/frontend/src/Components/PoliciesContext/PoliciesContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const PoliciesContext = createContext();\n\nexport const PoliciesProvider = ({ children }) => {\n  const [policies, setPolicies] = useState([]);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const fetchPolicies = async () => {\n      try {\n        const response = await axios.get('http://localhost:4001/api/policies');\n        setPolicies(response.data);\n      } catch (error) {\n        console.error('Error fetching policies:', error);\n      }\n    };\n\n    fetchPolicies();\n  }, []);\n\n  return (\n    <PoliciesContext.Provider value={{ policies, setPolicies, user, setUser }}>\n      {children}\n    </PoliciesContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,oCAAoC,CAAC;QACtEL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACC,eAAe,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ;MAAEC,WAAW;MAAEC,IAAI;MAAEC;IAAQ,CAAE;IAAAL,QAAA,EACvEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAChB,EAAA,CAtBWF,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}