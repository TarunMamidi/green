{"ast":null,"code":"var _jsxFileName = \"/home/tarun/Documents/greenkoproject/frontend/src/Components/Navbar/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LoginSignup from './LoginSignup';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null); // State to manage user data\n\n  const handleLogin = userData => {\n    setUser(userData); // Set the user data upon successful login\n  };\n  const handleLogout = async () => {\n    try {\n      // Call logout API endpoint (if needed)\n      // Perform any cleanup tasks on the server-side\n\n      // Clear user data upon logout\n      setUser(null);\n    } catch (error) {\n      console.error('Logout Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !user ? /*#__PURE__*/_jsxDEV(LoginSignup, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LoginSignup","Navbar","jsxDEV","_jsxDEV","App","_s","user","setUser","handleLogin","userData","handleLogout","error","console","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","$RefreshReg$"],"sources":["/home/tarun/Documents/greenkoproject/frontend/src/Components/Navbar/Navbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport LoginSignup from './LoginSignup';\nimport Navbar from './Navbar';\n\nconst App = () => {\n  const [user, setUser] = useState(null); // State to manage user data\n\n  const handleLogin = (userData) => {\n    setUser(userData); // Set the user data upon successful login\n  };\n\n  const handleLogout = async () => {\n    try {\n      // Call logout API endpoint (if needed)\n      // Perform any cleanup tasks on the server-side\n\n      // Clear user data upon logout\n      setUser(null);\n    } catch (error) {\n      console.error('Logout Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      {!user ? (\n        <LoginSignup onLogin={handleLogin} />\n      ) : (\n        <Navbar user={user} onLogout={handleLogout} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC,MAAMS,WAAW,GAAIC,QAAQ,IAAK;IAChCF,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA;;MAEA;MACAH,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,EACG,CAACP,IAAI,gBACJH,OAAA,CAACH,WAAW;MAACc,OAAO,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErCf,OAAA,CAACF,MAAM;MAACK,IAAI,EAAEA,IAAK;MAACa,QAAQ,EAAET;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC9C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA5BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}