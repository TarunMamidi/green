{"ast":null,"code":"var _jsxFileName = \"/home/tarun/Documents/greenkoproject/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport LoginSignup from './Pages/LoginSignup';\nimport Admin from './Components/admin/admin'; // Assuming you have a Home component for the '/' route\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Function to handle successful login (you can pass this function to LoginSignup component)\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  // Hook to programmatically navigate\n  const navigate = useNavigate();\n\n  // Redirect to Home page if logged in\n  if (isLoggedIn) {\n    navigate('/');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginSignup, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Redirect to login if not logged in\n        _jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KN3Kzl+xbVDEK6g7j5ANJnQKP3k=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","Navigate","React","useState","LoginSignup","Admin","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","navigate","useNavigate","className","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/home/tarun/Documents/greenkoproject/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport LoginSignup from './Pages/LoginSignup';\nimport Admin from './Components/admin/admin'; // Assuming you have a Home component for the '/' route\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Function to handle successful login (you can pass this function to LoginSignup component)\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  // Hook to programmatically navigate\n  const navigate = useNavigate();\n\n  // Redirect to Home page if logged in\n  if (isLoggedIn) {\n    navigate('/');\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          {/* Route for LoginSignup component */}\n          <Route path=\"/\" element={<LoginSignup onLogin={handleLogin} />} />\n\n          {/* Route for Home component (only accessible if logged in) */}\n          {isLoggedIn ? (\n            <Route path=\"/\" element={<Admin />} />\n          ) : (\n            // Redirect to login if not logged in\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n          )}\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,KAAK,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAME,QAAQ,GAAGC,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIJ,UAAU,EAAE;IACdG,QAAQ,CAAC,GAAG,CAAC;EACf;EAEA,oBACEN,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBT,OAAA,CAACT,aAAa;MAAAkB,QAAA,eACZT,OAAA,CAACR,MAAM;QAAAiB,QAAA,gBAELT,OAAA,CAACP,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEX,OAAA,CAACH,WAAW;YAACe,OAAO,EAAEP;UAAY;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAGjEb,UAAU,gBACTH,OAAA,CAACP,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEX,OAAA,CAACF,KAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAA;QAEtC;QACAhB,OAAA,CAACP,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEX,OAAA,CAACN,QAAQ;YAACuB,EAAE,EAAC,GAAG;YAACC,OAAO;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACxD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACd,EAAA,CAlCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}